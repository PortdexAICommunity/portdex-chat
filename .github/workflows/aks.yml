# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# Prerequisites:
# 1. Azure Container Registry (ACR) and AKS cluster are created
# 2. ACR is attached to the AKS cluster for pull access
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://learn.microsoft.com/en-us/azure/aks/cluster-container-registry-integration?tabs=azure-cli
#
# To configure this workflow:
#
# 1. Set up Authentication Secrets in your repository
#    Navigate to Settings > Secrets and variables > Actions > New repository secret
#    Add the following secrets (get these values from Azure):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set up Configuration Variables in your repository
#    Navigate to Settings > Secrets and variables > Actions > Variables tab > New repository variable
#    Add the following variables:
#    - AZURE_CONTAINER_REGISTRY: Name of your Azure Container Registry
#    - CONTAINER_NAME: Name for your container image
#    - ACR_RESOURCE_GROUP: Resource group where your ACR is located
#    - AKS_RESOURCE_GROUP: Resource group where your AKS cluster is located
#    - CLUSTER_NAME: Name of your AKS cluster
#    - DEPLOYMENT_MANIFEST_PATH: Path to your Kubernetes deployment manifest
#
# For more information:
# - GitHub Actions for Azure: https://github.com/Azure/Actions
# - Sample workflows: https://github.com/Azure/actions-workflow-samples
# - Azure CLI in GitHub Actions: https://github.com/Azure/login

name: Build and deploy an app to AKS

on:
  push:
    branches: ["production"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: ${{ vars.AZURE_CONTAINER_REGISTRY }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
  ACR_RESOURCE_GROUP: ${{ vars.ACR_RESOURCE_GROUP }}
  AKS_RESOURCE_GROUP: ${{ vars.AKS_RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  DEPLOYMENT_MANIFEST_PATH: ${{ vars.DEPLOYMENT_MANIFEST_PATH }}
  NAMESPACE: ${{ github.event.repository.name }}
  # NAMESPACE: maava

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: "v0.0.25"

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: "false"
          use-kubelogin: "true"

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          namespace: ${{ env.NAMESPACE }}
