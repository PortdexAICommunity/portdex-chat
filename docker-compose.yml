version: "3.8"

services:
  # PostgreSQL Database
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: portdex_chat
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      POSTGRES_URL: postgresql://postgres:OtWLnycqLFL3Knk1@db.dhgqomfqiqroedqzzaaa.supabase.co:5432/postgres
      AUTH_TRUST_HOST: "true"
      NEXTAUTH_URL: https://chat.portdex.ai
      AUTH_SECRET: h4huB+Yz/HedzqcnQhx6wkN68GHFbTfiGabL37JgqSI=
      DASHSCOPE_API_KEY: sk-116b80f97f3147388ab31b40433d9848
      PORTDEX_API_KEY: sk-ii040qeGVXlt95xXhTu7sw
      REDIS_URL: redis://default:sH5EImlKc2MTMgeeuGYYJKrgphvpfEY5@redis-17973.c100.us-east-1-4.ec2.redns.redis-cloud.com:17973
      # Add other required environment variables here
      # AUTH_SECRET: your-auth-secret
      # Add AI API keys as needed
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: always

# volumes:
#   postgres_data:
